{"version":3,"sources":["Contacts.js","services/contactService.js","App.js","index.js"],"names":["Person","props","name","number","onClick","deleteContact","Contacts","contacts","contactList","map","person","baseUrl","contactService","getAll","a","request","axios","get","response","data","create","newObject","post","update","id","put","delete","status","Filter","text","value","onChange","Notification","message","className","Error","errorMessage","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","st","setNewFilter","notification","setNotification","setError","useEffect","then","console","log","filter","toLowerCase","includes","event","target","onSubmit","preventDefault","newPerson","some","e","window","confirm","uc","find","p","returnedPerson","filtered","concat","setTimeout","catch","error","type","contact","ReactDOM","render","document","getElementById"],"mappings":"qKAEMA,EAAS,SAACC,GACd,OACE,qCACA,8BAAIA,EAAMC,KAAV,IAAiBD,EAAME,UACvB,wBAAQC,QAAS,WAAQH,EAAMI,iBAA/B,wBAiBWC,EAZE,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUF,EAAoB,EAApBA,cACtBG,EAAcD,EAASE,KAAI,SAACC,GAAD,OAC7B,cAAC,EAAD,CAA4BR,KAAMQ,EAAOR,KAAMC,OAAQO,EAAOP,OAAQE,cAAgB,kBAAMA,EAAcK,KAA7FA,EAAOP,WAExB,OACE,qCACE,yCACCK,M,uCCjBDG,EAAU,eAiCDC,EAPQ,CACrBC,OAzBU,uCAAG,8BAAAC,EAAA,6DACPC,EAAUC,IAAMC,IAAIN,GADb,SAEUI,EAFV,cAEPG,EAFO,yBAGNA,EAASC,MAHH,2CAAH,qDA0BVC,OApBU,uCAAG,WAAOC,GAAP,iBAAAP,EAAA,6DACPC,EAAUC,IAAMM,KAAKX,EAASU,GADvB,SAEUN,EAFV,cAEPG,EAFO,yBAGNA,EAASC,MAHH,2CAAH,sDAqBVI,OAfU,uCAAG,WAAOC,EAAIH,GAAX,iBAAAP,EAAA,6DACPC,EAAUC,IAAMS,IAAN,UAAad,EAAb,YAAwBa,GAAMH,GADjC,SAEUN,EAFV,cAEPG,EAFO,yBAGNA,EAASC,MAHH,2CAAH,wDAgBVd,cAViB,uCAAG,WAAOmB,GAAP,iBAAAV,EAAA,6DACdC,EAAUC,IAAMU,OAAN,UAAgBf,EAAhB,YAA2Ba,IADvB,SAEGT,EAFH,cAEdG,EAFc,yBAGbA,EAASS,QAHI,2CAAH,uDCjBbC,EAAS,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC7B,OACE,8BACGF,EACD,uBAAOC,MAAOA,EAAOC,SAAUA,QAK/BC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKC,UAAU,eAAf,SACGD,KAKDE,EAAQ,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACf,OAAqB,OAAjBA,EACK,KAIP,qBAAKF,UAAU,QAAf,SACGE,KAoIQC,EA/HH,WACV,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA2BN,mBAAS,IAApC,mBAAOO,EAAP,KAAWC,EAAX,KACA,EAAwCR,mBAAS,MAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAAiCV,mBAAS,MAA1C,mBAAOF,EAAP,KAAqBa,EAArB,KAEAC,qBAAU,WACRtC,EAAeC,SACZsC,MAAK,SAACjC,GACLkC,QAAQC,IAAI,qBACZb,EAAWtB,QAEd,IAEH,IAYMX,EAAWgC,EAAQe,QAAO,SAAC5C,GAAD,OAC9BA,EAAOR,KAAKqD,cAAcC,SAASX,EAAGU,kBA2ExC,OACE,gCACE,2CACA,cAAC,EAAD,CAActB,QAASc,IACvB,cAAC,EAAD,CAAOX,aAAcA,IACrB,cAAC,EAAD,CAAQP,KAAK,qBAAqBC,MAAOe,EAAId,SArF/B,SAAC0B,GACjBX,EAAaW,EAAMC,OAAO5B,UAqFxB,2CACA,uBAAM6B,SA/ES,SAACF,GAClBA,EAAMG,iBACN,IAAMC,EAAY,CAChB3D,KAAMuC,EACNtC,OAAQwC,GAEV,GAAIJ,EAAQuB,MAAK,SAACC,GAAD,OAAOA,EAAE7D,OAASuC,MACjC,GACEuB,OAAOC,QAAP,UACKxB,EADL,2EAGA,CACA,IAAMyB,EAAK3B,EAAQ4B,MAAK,SAACC,GAAD,OAAOA,EAAElE,OAASuC,KAC1CW,QAAQC,IAAIa,EAAG1C,IACfZ,EACGW,OAAO2C,EAAG1C,GAAIqC,GACdV,MAAK,SAACkB,GACL,IAAMC,EAAW/B,EAAQe,QAAO,SAAC5C,GAAD,OAAYA,EAAOc,KAAO0C,EAAG1C,MAC7DgB,EAAW8B,EAASC,OAAOF,IAC3BrB,EAAgB,2BAAD,OAA4BqB,EAAenE,OAC1DsE,YAAW,WACTxB,EAAgB,QACf,cAITpC,EACGQ,OAAOyC,GACPV,MAAK,SAACkB,GACLjB,QAAQC,IAAIgB,GACZ7B,EAAWD,EAAQgC,OAAOF,IAC1B3B,EAAW,IACXE,EAAa,IACbI,EAAgB,SAAD,OAAUqB,EAAenE,OACxCsE,YAAW,WACTxB,EAAgB,QACf,QAEJyB,OAAM,SAACC,GACNzB,EAAS,GAAD,OACHyB,IAELF,YAAW,WACTvB,EAAS,QACR,SAmCP,UACE,yCACQ,uBAAOnB,MAAOW,EAASV,SAjGrB,SAAC0B,GACff,EAAWe,EAAMC,OAAO5B,aAkGpB,2CACU,uBAAOA,MAAOa,EAAWZ,SAhGvB,SAAC0B,GACjBb,EAAaa,EAAMC,OAAO5B,aAiGtB,8BACE,wBAAQ6C,KAAK,SAAb,sBAGJ,cAAC,EAAD,CAAUpE,SAAUA,EAAUF,cAzCZ,SAACuE,GACjBZ,OAAOC,QAAP,iBAAyBW,EAAQ1E,QACnCU,EAAeP,cAAcuE,EAAQpD,IAClC2B,MAAK,WACJC,QAAQC,IAAI,WACZb,EAAWjC,EAAS+C,QAAO,SAAC5C,GAAD,OAAYA,EAAOc,KAAOoD,EAAQpD,OAC7DwB,EAAgB,WAAD,OAAY4B,EAAQ1E,KAApB,oBACfsE,YAAW,WACTxB,EAAgB,QACf,QAEJyB,OAAM,SAACC,GACNzB,EAAS,kBAAD,OACY2B,EAAQ1E,KADpB,2CAGRsE,YAAW,WACTvB,EAAS,QACR,KACHT,EAAWjC,EAAS+C,QAAO,SAAC5C,GAAD,OAAYA,EAAOc,KAAOoD,EAAQpD,iB,MCpIvEqD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.53399706.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Person = (props) => {\n  return (\n    <>\n    <p>{props.name} {props.number}</p>\n    <button onClick={() => { props.deleteContact() }}>delete</button>\n    </>\n  );\n};\n\nconst Contacts = ({ contacts, deleteContact }) => {\n  const contactList = contacts.map((person) =>\n      <Person key={person.number} name={person.name} number={person.number} deleteContact={ () => deleteContact(person) } />\n  );\n  return (\n    <>\n      <h3>Numbers</h3>\n      {contactList}\n    </>\n  );\n};\n\nexport default Contacts;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = async () => {\n  const request = axios.get(baseUrl);\n  const response = await request;\n  return response.data;\n};\n\nconst create = async (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  const response = await request;\n  return response.data;\n};\n\nconst update = async (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  const response = await request;\n  return response.data;\n};\n\nconst deleteContact = async (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  const response = await request;\n  return response.status;\n};\n\nconst contactService = {\n  getAll,\n  create,\n  update,\n  deleteContact,\n};\n\nexport default contactService;\n","import React, { useEffect, useState } from \"react\";\nimport Contacts from \"./Contacts\";\nimport contactService from \"./services/contactService\";\n\nconst Filter = ({ text, value, onChange }) => {\n  return (\n    <p>\n      {text}\n      <input value={value} onChange={onChange} />\n    </p>\n  );\n};\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return (\n    <div className=\"notification\">\n      {message}\n    </div>\n  );\n};\n\nconst Error = ({ errorMessage }) => {\n  if (errorMessage === null) {\n    return null;\n  }\n\n  return (\n    <div className=\"error\">\n      {errorMessage}\n    </div>\n  );\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [st, setNewFilter] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n  const [errorMessage, setError] = useState(null);\n\n  useEffect(() => {\n    contactService.getAll()\n      .then((response) => {\n        console.log(\"promise fulfilled\");\n        setPersons(response);\n      });\n  }, []);\n\n  const setName = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const setNumber = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const setFilter = (event) => {\n    setNewFilter(event.target.value);\n  };\n\n  const contacts = persons.filter((person) =>\n    person.name.toLowerCase().includes(st.toLowerCase())\n  );\n\n  const addContact = (event) => {\n    event.preventDefault();\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    };\n    if (persons.some((e) => e.name === newName)) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`,\n        )\n      ) {\n        const uc = persons.find((p) => p.name === newName);\n        console.log(uc.id);\n        contactService\n          .update(uc.id, newPerson)\n          .then((returnedPerson) => {\n            const filtered = persons.filter((person) => person.id !== uc.id);\n            setPersons(filtered.concat(returnedPerson));\n            setNotification(`Updated information for ${returnedPerson.name}`);\n            setTimeout(() => {\n              setNotification(null);\n            }, 5000);\n          });\n      }\n    } else {\n      contactService\n        .create(newPerson)\n        .then((returnedPerson) => {\n          console.log(returnedPerson);\n          setPersons(persons.concat(returnedPerson));\n          setNewName(\"\");\n          setNewNumber(\"\");\n          setNotification(`Added ${returnedPerson.name}`);\n          setTimeout(() => {\n            setNotification(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          setError(\n            `${error}`,\n          );\n          setTimeout(() => {\n            setError(null);\n          }, 5000);\n        });\n    }\n  };\n\n  const deleteContact = (contact) => {\n    if (window.confirm(`Delete ${contact.name}`)) {\n      contactService.deleteContact(contact.id)\n        .then(() => {\n          console.log(\"deleted\");\n          setPersons(contacts.filter((person) => person.id !== contact.id));\n          setNotification(`Deleted ${contact.name} from phonebook`);\n          setTimeout(() => {\n            setNotification(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          setError(\n            `Information of ${contact.name} has already been removed from server.`,\n          );\n          setTimeout(() => {\n            setError(null);\n          }, 5000);\n          setPersons(contacts.filter((person) => person.id !== contact.id));\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <Error errorMessage={errorMessage} />\n      <Filter text=\"filter shown with \" value={st} onChange={setFilter} />\n      <h3>Add a new</h3>\n      <form onSubmit={addContact}>\n        <div>\n          name: <input value={newName} onChange={setName} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={setNumber} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <Contacts contacts={contacts} deleteContact={deleteContact} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}